{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3de47834\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"todoItemContainer\"\n};\nconst _hoisted_2 = [\"onClick\", \"checked\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todo, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"todoItem\",\n      key: item.id\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      id: \"check\",\n      onClick: $event => _ctx.checkedTodo(item.id),\n      checked: item.checked\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h3\", {\n      class: _normalizeClass({\n        'finishText': item.checked\n      })\n    }, _toDisplayString(item.text), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteTodo(item.id)\n    }, \" X \", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAmB;;;;uBAA9BC,oBAOM,OAPNC,UAOM,sBANFD,oBAKKE,6BAL+BC,WAAI,EAAZC,IAAI;yBAAhCJ,oBAKK;MALDD,KAAK,EAAC,UAAU;MAAuBM,GAAG,EAAED,IAAI,CAACE;QACjDC,oBACoC;MAD7BC,IAAI,EAAC,UAAU;MAACC,IAAI,EAAC,OAAO;MAACH,EAAE,EAAC,OAAO;MAAMI,OAAK,YAAEC,gBAAW,CAACP,IAAI,CAACE,EAAE;MACnEM,OAAO,EAAER,IAAI,CAACQ;yCACzBL,oBAAsE;MAA3DR,KAAK;QAAA,cAAkBK,IAAI,CAACQ;MAAO;wBAAOR,IAAI,CAACS,IAAI,yBAC9DN,oBAAqD;MAAxCG,OAAK,YAAEC,eAAU,CAACP,IAAI,CAACE,EAAE;OAAG,KAAG","names":["class","_createElementBlock","_hoisted_1","_Fragment","$props","item","key","id","_createElementVNode","type","name","onClick","_ctx","checked","text"],"sourceRoot":"","sources":["/Users/jeong-yongseong/Desktop/VUE-INTERMEDIATE/vue-todo-test/src/components/TodoList.vue"],"sourcesContent":["<template>\n    <div class=\"todoItemContainer\">\n        <li class=\"todoItem\" v-for=\"item in todo\" :key=\"item.id\">\n            <input type=\"checkbox\" name=\"check\" id=\"check\" v-on:click=\"checkedTodo(item.id)\"\n                v-bind:checked=\"item.checked\" />\n            <h3 v-bind:class=\"{ 'finishText': item.checked }\">{{ item.text }}</h3>\n            <button v-on:click=\"deleteTodo(item.id)\"> X </button>\n        </li>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['todo'],\n    methods: {\n        checked(id) {\n            this.$emit('checkedTodo', id)\n        }\n    }\n}\n</script>\n\n<style scoped>\nli {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  list-style: none;\n}\n\nli>input[type=\"checkbox\"] {\n  width: 25px;\n  height: 25px;\n  border: 1px solid #c9c9c9;\n  margin: 0;\n}\n\nli>button {\n  width: 25px;\n  height: 25px;\n  background: white;\n  border: 1px solid #c9c9c9;\n  border-radius: 4px;\n}\n\n.finishText {\n  color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}