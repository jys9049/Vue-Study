{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Vue Todo-List\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"TodoList\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"text\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTodo && $options.addTodo(...args))\n  }, \"add\"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todo, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, _toDisplayString(item.id), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAsB,YAAlB,eAAa;gCAEfA,oBAAkC;EAA3BC,GAAG,EAAC;AAAM,GAAC,UAAQ;gCAAQD,oBAAK;;;uBAH3CE,oBAYM,cAXJC,UAAsB,EACtBH,oBASM,cARJI,UAAkC,YAAK,kBACvCJ,oBAA4C;IAArCK,EAAE,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;+DAAUC,SAAI;iDAAJA,SAAI,KAC1CP,oBAAyC;IAA5BQ,OAAK,yCAAEC,6CAAO;KAAE,KAAG,GAChCT,oBAIM,iCAHJE,oBAEKQ,6BAFcH,SAAI,EAAZI,IAAI;yBAAfT,oBAEK;MAFqBU,GAAG,EAAED,IAAI,CAACN;wBAC/BM,IAAI,CAACN,EAAE","names":["_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","id","type","_ctx","onClick","$options","_Fragment","item","key"],"sourceRoot":"","sources":["/Users/jeong-yongseong/Desktop/VUE-INTERMEDIATE/vue-todo/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Vue Todo-List</h1>\n    <div>\n      <label for=\"text\">TodoList</label><br/>\n      <input id=\"text\" type=\"text\" v-model=\"text\">\n      <button v-on:click=\"addTodo\">add</button>\n      <div>\n        <li v-for=\"item in todo\" :key=\"item.id\">\n          {{ item.id }}\n        </li>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      text: '',\n      todo: [\n        {\n          id: 1,\n          text: '안녕하세요',\n          checked: false,\n        },\n        {\n          id: 2,\n          text: '안녕하세요',\n          checked: false,\n        },\n      ]\n    }\n  },\n  methods: {\n    addTodo: function(text) {\n      this.todo.concat({\n        id: this.todo.length + 1,\n        text: text,\n        checked: false\n      })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}