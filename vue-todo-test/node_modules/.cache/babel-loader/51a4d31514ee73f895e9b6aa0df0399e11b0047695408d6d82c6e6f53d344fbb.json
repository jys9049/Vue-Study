{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Vue Todo-List\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"TodoList\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"text\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTodo && $options.addTodo(...args))\n  }, \"add\"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todo, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"test\",\n      key: item.id\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      id: \"check\",\n      checked: \"item.checked\",\n      onClick: $event => $options.checkedTodo(item.id)\n    }, null, 8 /* PROPS */, _hoisted_4), _createTextVNode(\" \" + _toDisplayString(item.text) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTodo(item.id)\n    }, \" 삭제 \", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAsB,YAAlB,eAAa;gCAEfA,oBAAkC;EAA3BC,GAAG,EAAC;AAAM,GAAC,UAAQ;gCAAQD,oBAAK;;;;uBAH3CE,oBAcM,cAbJC,UAAsB,EACtBH,oBAWM,cAVJI,UAAkC,YAAK,kBACvCJ,oBAA4C;IAArCK,EAAE,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;+DAAUC,SAAI;iDAAJA,SAAI,KAC1CP,oBAAyC;IAA5BQ,OAAK,yCAAEC,6CAAO;KAAE,KAAG,GAChCT,oBAMM,iCALJE,oBAIKQ,6BAJ2BH,SAAI,EAAZI,IAAI;yBAA5BT,oBAIK;MAJDU,KAAK,EAAC,MAAM;MAAuBC,GAAG,EAAEF,IAAI,CAACN;QAC/CL,oBAAuG;MAAhGM,IAAI,EAAC,UAAU;MAACQ,IAAI,EAAC,OAAO;MAACT,EAAE,EAAC,OAAO;MAACU,OAAO,EAAC,cAAY;MAAMP,OAAK,YAAEC,oBAAW,CAACE,IAAI,CAACN,EAAE;0DAAI,GACvG,oBAAGM,IAAI,CAACK,IAAI,IAAG,GACf,qCAAsD;MAAzCR,OAAK,YAAEC,mBAAU,CAACE,IAAI,CAACN,EAAE;OAAG,MAAI","names":["_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","id","type","_ctx","onClick","$options","_Fragment","item","class","key","name","checked","text"],"sourceRoot":"","sources":["/Users/jeong-yongseong/Desktop/VUE-INTERMEDIATE/vue-todo/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Vue Todo-List</h1>\n    <div>\n      <label for=\"text\">TodoList</label><br/>\n      <input id=\"text\" type=\"text\" v-model=\"text\">\n      <button v-on:click=\"addTodo\">add</button>\n      <div>\n        <li class=\"test\" v-for=\"item in todo\" :key=\"item.id\">\n          <input type=\"checkbox\" name=\"check\" id=\"check\" checked=item.checked v-on:click=\"checkedTodo(item.id)\"/>\n          {{ item.text }}\n          <button v-on:click=\"deleteTodo(item.id)\"> 삭제 </button>\n        </li>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      text: '',\n      todo: [\n        {\n          id: 1,\n          text: '안녕하세요',\n          checked: false,\n        },\n        {\n          id: 2,\n          text: '안녕하세요',\n          checked: false,\n        },\n      ]\n    }\n  },\n  methods: {\n    addTodo: function() {\n      this.todo.push({\n        id: this.todo.length + 1,\n        text: this.text,\n        checked: false\n      })\n    },\n    deleteTodo: function(id) {\n      this.todo = this.todo.filter(item => item.id !== id)\n    },\n    checkedTodo: function(id) {\n      const todoList = [...this.todo];\n      const todoItem = todoList.find(item => item.id === id);\n\n      if(todoItem) {\n        console.log(todoList)\n        todoItem.checked = !todoItem.checked\n        console.log(todoList)\n        this.todo = todoList\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  li {\n    list-style: none;\n  }\n\n  .test {\n    font-size: 14px;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}